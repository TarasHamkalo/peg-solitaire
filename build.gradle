plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "$springDependencyManagementPluginVersion"
}

repositories {
    mavenCentral()
}

allprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = "${group}"
    version = "${version}"

    repositories {
        mavenCentral()
    }

    tasks.withType(JavaCompile).configureEach {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
}


subprojects {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-devtools'

        annotationProcessor "org.projectlombok:lombok:$lombokVersion"
        compileOnly "org.projectlombok:lombok:$lombokVersion"

        testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
        testCompileOnly "org.projectlombok:lombok:$lombokVersion"

        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        testImplementation platform("org.junit:junit-bom:$junitBomVersion")
        testImplementation 'org.junit.jupiter:junit-jupiter'
        testImplementation 'org.junit.jupiter:junit-jupiter-params'
    }

    tasks.compileJava {
        options.compilerArgs += ["-parameters", "-Xlint:unchecked,rawtypes", "-Werror"]
    }

    test {
        useJUnitPlatform()
    }
}
